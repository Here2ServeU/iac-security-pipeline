name: T2S DevSecOps Security Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  security-checks:
    runs-on: ubuntu-latest
    name: Run IaC + Container + Secrets Scan + AI Analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Checkov
        run: pip install checkov

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_$(uname -s)_$(uname -m).tar.gz | \
          tar -xz -C /usr/local/bin gitleaks

      - name: Run Checkov on Terraform
        run: |
          # Checkov will return exit code 1 if misconfigurations are found.
          # We use `|| true` to ensure the step continues and outputs are generated.
          # Best practice: remove `|| true` to find policy violations (which is normal).
	  checkov -d terraform --output json > checkov-report.json || true

      - name: Run Trivy on Dockerfile
        run: |
          trivy config --format json --output trivy-report.json .

      - name: Run Gitleaks
        run: |
          gitleaks detect --source . --report-format sarif --report-path gitleaks-report.sarif || true

      - name: Run AI-Powered Analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python .github/scripts/ai_analyzer.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: t2s-devsecops-reports
          path: |
            devsecops_scan_results.png
            devsecops_recommendations.csv
